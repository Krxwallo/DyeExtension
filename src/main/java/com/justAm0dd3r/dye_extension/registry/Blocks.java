package com.justAm0dd3r.dye_extension.registry;

import com.justAm0dd3r.dye_extension.blocks.*;
import com.justAm0dd3r.dye_extension.reference.Reference;
import net.minecraft.block.Block;
import net.minecraft.block.SlabBlock;
import net.minecraft.block.StairsBlock;
import net.minecraft.item.Item;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;

import static com.justAm0dd3r.dye_extension.registry.Items.ITEMS;

public class Blocks {

    public static void init() {
        BLOCKS.register(FMLJavaModLoadingContext.get().getModEventBus());
    }

    public static final DeferredRegister<Block> BLOCKS = new DeferredRegister<>(ForgeRegistries.BLOCKS, Reference.MOD_ID);


    // Auto-GEN dyed (polished) andesite

    public static final RegistryObject<Block> BLACK_ANDESITE = BLOCKS.register("black_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> BLACK_ANDESITE_ITEM = ITEMS.register("black_andesite", () -> new BlockItemBase(BLACK_ANDESITE.get()));
    public static final RegistryObject<Block> BLUE_ANDESITE = BLOCKS.register("blue_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> BLUE_ANDESITE_ITEM = ITEMS.register("blue_andesite", () -> new BlockItemBase(BLUE_ANDESITE.get()));
    public static final RegistryObject<Block> BROWN_ANDESITE = BLOCKS.register("brown_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> BROWN_ANDESITE_ITEM = ITEMS.register("brown_andesite", () -> new BlockItemBase(BROWN_ANDESITE.get()));
    public static final RegistryObject<Block> CYAN_ANDESITE = BLOCKS.register("cyan_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> CYAN_ANDESITE_ITEM = ITEMS.register("cyan_andesite", () -> new BlockItemBase(CYAN_ANDESITE.get()));
    public static final RegistryObject<Block> GRAY_ANDESITE = BLOCKS.register("gray_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> GRAY_ANDESITE_ITEM = ITEMS.register("gray_andesite", () -> new BlockItemBase(GRAY_ANDESITE.get()));
    public static final RegistryObject<Block> GREEN_ANDESITE = BLOCKS.register("green_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> GREEN_ANDESITE_ITEM = ITEMS.register("green_andesite", () -> new BlockItemBase(GREEN_ANDESITE.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_ANDESITE = BLOCKS.register("light_blue_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> LIGHT_BLUE_ANDESITE_ITEM = ITEMS.register("light_blue_andesite", () -> new BlockItemBase(LIGHT_BLUE_ANDESITE.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_ANDESITE = BLOCKS.register("light_gray_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> LIGHT_GRAY_ANDESITE_ITEM = ITEMS.register("light_gray_andesite", () -> new BlockItemBase(LIGHT_GRAY_ANDESITE.get()));
    public static final RegistryObject<Block> LIME_ANDESITE = BLOCKS.register("lime_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> LIME_ANDESITE_ITEM = ITEMS.register("lime_andesite", () -> new BlockItemBase(LIME_ANDESITE.get()));
    public static final RegistryObject<Block> MAGENTA_ANDESITE = BLOCKS.register("magenta_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> MAGENTA_ANDESITE_ITEM = ITEMS.register("magenta_andesite", () -> new BlockItemBase(MAGENTA_ANDESITE.get()));
    public static final RegistryObject<Block> ORANGE_ANDESITE = BLOCKS.register("orange_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> ORANGE_ANDESITE_ITEM = ITEMS.register("orange_andesite", () -> new BlockItemBase(ORANGE_ANDESITE.get()));
    public static final RegistryObject<Block> PINK_ANDESITE = BLOCKS.register("pink_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> PINK_ANDESITE_ITEM = ITEMS.register("pink_andesite", () -> new BlockItemBase(PINK_ANDESITE.get()));
    public static final RegistryObject<Block> PURPLE_ANDESITE = BLOCKS.register("purple_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> PURPLE_ANDESITE_ITEM = ITEMS.register("purple_andesite", () -> new BlockItemBase(PURPLE_ANDESITE.get()));
    public static final RegistryObject<Block> RED_ANDESITE = BLOCKS.register("red_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> RED_ANDESITE_ITEM = ITEMS.register("red_andesite", () -> new BlockItemBase(RED_ANDESITE.get()));
    public static final RegistryObject<Block> WHITE_ANDESITE = BLOCKS.register("white_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> WHITE_ANDESITE_ITEM = ITEMS.register("white_andesite", () -> new BlockItemBase(WHITE_ANDESITE.get()));
    public static final RegistryObject<Block> YELLOW_ANDESITE = BLOCKS.register("yellow_andesite", DyedAndesiteBlock::new);
    public static final RegistryObject<Item> YELLOW_ANDESITE_ITEM = ITEMS.register("yellow_andesite", () -> new BlockItemBase(YELLOW_ANDESITE.get()));
    public static final RegistryObject<Block> BLACK_POLISHED_ANDESITE = BLOCKS.register("black_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> BLACK_POLISHED_ANDESITE_ITEM = ITEMS.register("black_polished_andesite", () -> new BlockItemBase(BLACK_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> BLUE_POLISHED_ANDESITE = BLOCKS.register("blue_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> BLUE_POLISHED_ANDESITE_ITEM = ITEMS.register("blue_polished_andesite", () -> new BlockItemBase(BLUE_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> BROWN_POLISHED_ANDESITE = BLOCKS.register("brown_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> BROWN_POLISHED_ANDESITE_ITEM = ITEMS.register("brown_polished_andesite", () -> new BlockItemBase(BROWN_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> CYAN_POLISHED_ANDESITE = BLOCKS.register("cyan_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> CYAN_POLISHED_ANDESITE_ITEM = ITEMS.register("cyan_polished_andesite", () -> new BlockItemBase(CYAN_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> GRAY_POLISHED_ANDESITE = BLOCKS.register("gray_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> GRAY_POLISHED_ANDESITE_ITEM = ITEMS.register("gray_polished_andesite", () -> new BlockItemBase(GRAY_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> GREEN_POLISHED_ANDESITE = BLOCKS.register("green_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> GREEN_POLISHED_ANDESITE_ITEM = ITEMS.register("green_polished_andesite", () -> new BlockItemBase(GREEN_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_POLISHED_ANDESITE = BLOCKS.register("light_blue_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> LIGHT_BLUE_POLISHED_ANDESITE_ITEM = ITEMS.register("light_blue_polished_andesite", () -> new BlockItemBase(LIGHT_BLUE_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_POLISHED_ANDESITE = BLOCKS.register("light_gray_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> LIGHT_GRAY_POLISHED_ANDESITE_ITEM = ITEMS.register("light_gray_polished_andesite", () -> new BlockItemBase(LIGHT_GRAY_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> LIME_POLISHED_ANDESITE = BLOCKS.register("lime_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> LIME_POLISHED_ANDESITE_ITEM = ITEMS.register("lime_polished_andesite", () -> new BlockItemBase(LIME_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> MAGENTA_POLISHED_ANDESITE = BLOCKS.register("magenta_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> MAGENTA_POLISHED_ANDESITE_ITEM = ITEMS.register("magenta_polished_andesite", () -> new BlockItemBase(MAGENTA_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> ORANGE_POLISHED_ANDESITE = BLOCKS.register("orange_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> ORANGE_POLISHED_ANDESITE_ITEM = ITEMS.register("orange_polished_andesite", () -> new BlockItemBase(ORANGE_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> PINK_POLISHED_ANDESITE = BLOCKS.register("pink_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> PINK_POLISHED_ANDESITE_ITEM = ITEMS.register("pink_polished_andesite", () -> new BlockItemBase(PINK_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> PURPLE_POLISHED_ANDESITE = BLOCKS.register("purple_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> PURPLE_POLISHED_ANDESITE_ITEM = ITEMS.register("purple_polished_andesite", () -> new BlockItemBase(PURPLE_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> RED_POLISHED_ANDESITE = BLOCKS.register("red_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> RED_POLISHED_ANDESITE_ITEM = ITEMS.register("red_polished_andesite", () -> new BlockItemBase(RED_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> WHITE_POLISHED_ANDESITE = BLOCKS.register("white_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> WHITE_POLISHED_ANDESITE_ITEM = ITEMS.register("white_polished_andesite", () -> new BlockItemBase(WHITE_POLISHED_ANDESITE.get()));
    public static final RegistryObject<Block> YELLOW_POLISHED_ANDESITE = BLOCKS.register("yellow_polished_andesite", DyedPolishedAndesiteBlock::new);
    public static final RegistryObject<Item> YELLOW_POLISHED_ANDESITE_ITEM = ITEMS.register("yellow_polished_andesite", () -> new BlockItemBase(YELLOW_POLISHED_ANDESITE.get()));


    // Auto-GEN dyed leaves
    public static final RegistryObject<Block> BLACK_LEAVES = BLOCKS.register("black_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> BLACK_LEAVES_ITEM = ITEMS.register("black_leaves", () -> new BlockItemBase(BLACK_LEAVES.get()));
    public static final RegistryObject<Block> BLUE_LEAVES = BLOCKS.register("blue_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> BLUE_LEAVES_ITEM = ITEMS.register("blue_leaves", () -> new BlockItemBase(BLUE_LEAVES.get()));
    public static final RegistryObject<Block> BROWN_LEAVES = BLOCKS.register("brown_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> BROWN_LEAVES_ITEM = ITEMS.register("brown_leaves", () -> new BlockItemBase(BROWN_LEAVES.get()));
    public static final RegistryObject<Block> CYAN_LEAVES = BLOCKS.register("cyan_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> CYAN_LEAVES_ITEM = ITEMS.register("cyan_leaves", () -> new BlockItemBase(CYAN_LEAVES.get()));
    public static final RegistryObject<Block> GRAY_LEAVES = BLOCKS.register("gray_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> GRAY_LEAVES_ITEM = ITEMS.register("gray_leaves", () -> new BlockItemBase(GRAY_LEAVES.get()));
    public static final RegistryObject<Block> GREEN_LEAVES = BLOCKS.register("green_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> GREEN_LEAVES_ITEM = ITEMS.register("green_leaves", () -> new BlockItemBase(GREEN_LEAVES.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_LEAVES = BLOCKS.register("light_blue_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> LIGHT_BLUE_LEAVES_ITEM = ITEMS.register("light_blue_leaves", () -> new BlockItemBase(LIGHT_BLUE_LEAVES.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_LEAVES = BLOCKS.register("light_gray_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> LIGHT_GRAY_LEAVES_ITEM = ITEMS.register("light_gray_leaves", () -> new BlockItemBase(LIGHT_GRAY_LEAVES.get()));
    public static final RegistryObject<Block> LIME_LEAVES = BLOCKS.register("lime_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> LIME_LEAVES_ITEM = ITEMS.register("lime_leaves", () -> new BlockItemBase(LIME_LEAVES.get()));
    public static final RegistryObject<Block> MAGENTA_LEAVES = BLOCKS.register("magenta_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> MAGENTA_LEAVES_ITEM = ITEMS.register("magenta_leaves", () -> new BlockItemBase(MAGENTA_LEAVES.get()));
    public static final RegistryObject<Block> ORANGE_LEAVES = BLOCKS.register("orange_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> ORANGE_LEAVES_ITEM = ITEMS.register("orange_leaves", () -> new BlockItemBase(ORANGE_LEAVES.get()));
    public static final RegistryObject<Block> PINK_LEAVES = BLOCKS.register("pink_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> PINK_LEAVES_ITEM = ITEMS.register("pink_leaves", () -> new BlockItemBase(PINK_LEAVES.get()));
    public static final RegistryObject<Block> PURPLE_LEAVES = BLOCKS.register("purple_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> PURPLE_LEAVES_ITEM = ITEMS.register("purple_leaves", () -> new BlockItemBase(PURPLE_LEAVES.get()));
    public static final RegistryObject<Block> RED_LEAVES = BLOCKS.register("red_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> RED_LEAVES_ITEM = ITEMS.register("red_leaves", () -> new BlockItemBase(RED_LEAVES.get()));
    public static final RegistryObject<Block> WHITE_LEAVES = BLOCKS.register("white_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> WHITE_LEAVES_ITEM = ITEMS.register("white_leaves", () -> new BlockItemBase(WHITE_LEAVES.get()));
    public static final RegistryObject<Block> YELLOW_LEAVES = BLOCKS.register("yellow_leaves", DyedLeavesBlock::new);
    public static final RegistryObject<Item> YELLOW_LEAVES_ITEM = ITEMS.register("yellow_leaves", () -> new BlockItemBase(YELLOW_LEAVES.get()));

    // AUTO-GEN
    public static final RegistryObject<Block> BLACK_COBBLESTONE = BLOCKS.register("black_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> BLUE_COBBLESTONE = BLOCKS.register("blue_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> BROWN_COBBLESTONE = BLOCKS.register("brown_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> CYAN_COBBLESTONE = BLOCKS.register("cyan_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> GRAY_COBBLESTONE = BLOCKS.register("gray_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> GREEN_COBBLESTONE = BLOCKS.register("green_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> LIGHT_BLUE_COBBLESTONE = BLOCKS.register("light_blue_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> LIGHT_GRAY_COBBLESTONE = BLOCKS.register("light_gray_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> LIME_COBBLESTONE = BLOCKS.register("lime_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> MAGENTA_COBBLESTONE = BLOCKS.register("magenta_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> ORANGE_COBBLESTONE = BLOCKS.register("orange_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> PINK_COBBLESTONE = BLOCKS.register("pink_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> PURPLE_COBBLESTONE = BLOCKS.register("purple_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> RED_COBBLESTONE = BLOCKS.register("red_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> WHITE_COBBLESTONE = BLOCKS.register("white_cobblestone", DyedCobblestoneBlock::new);
    public static final RegistryObject<Block> YELLOW_COBBLESTONE = BLOCKS.register("yellow_cobblestone", DyedCobblestoneBlock::new);

    public static final RegistryObject<Block> BLACK_STONE = BLOCKS.register("black_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> BLUE_STONE = BLOCKS.register("blue_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> BROWN_STONE = BLOCKS.register("brown_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> CYAN_STONE = BLOCKS.register("cyan_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> GRAY_STONE = BLOCKS.register("gray_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> GREEN_STONE = BLOCKS.register("green_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> LIGHT_BLUE_STONE = BLOCKS.register("light_blue_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> LIGHT_GRAY_STONE = BLOCKS.register("light_gray_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> LIME_STONE = BLOCKS.register("lime_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> MAGENTA_STONE = BLOCKS.register("magenta_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> ORANGE_STONE = BLOCKS.register("orange_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> PINK_STONE = BLOCKS.register("pink_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> PURPLE_STONE = BLOCKS.register("purple_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> RED_STONE = BLOCKS.register("red_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> WHITE_STONE = BLOCKS.register("white_stone", DyedStoneBlock::new);
    public static final RegistryObject<Block> YELLOW_STONE = BLOCKS.register("yellow_stone", DyedStoneBlock::new);

    // AUTO-GEN Block Items
    public static final RegistryObject<Item> BLACK_COBBLESTONE_ITEM = ITEMS.register("black_cobblestone", () -> new BlockItemBase(BLACK_COBBLESTONE.get()));
    public static final RegistryObject<Item> BLUE_COBBLESTONE_ITEM = ITEMS.register("blue_cobblestone", () -> new BlockItemBase(BLUE_COBBLESTONE.get()));
    public static final RegistryObject<Item> BROWN_COBBLESTONE_ITEM = ITEMS.register("brown_cobblestone", () -> new BlockItemBase(BROWN_COBBLESTONE.get()));
    public static final RegistryObject<Item> CYAN_COBBLESTONE_ITEM = ITEMS.register("cyan_cobblestone", () -> new BlockItemBase(CYAN_COBBLESTONE.get()));
    public static final RegistryObject<Item> GRAY_COBBLESTONE_ITEM = ITEMS.register("gray_cobblestone", () -> new BlockItemBase(GRAY_COBBLESTONE.get()));
    public static final RegistryObject<Item> GREEN_COBBLESTONE_ITEM = ITEMS.register("green_cobblestone", () -> new BlockItemBase(GREEN_COBBLESTONE.get()));
    public static final RegistryObject<Item> LIGHT_BLUE_COBBLESTONE_ITEM = ITEMS.register("light_blue_cobblestone", () -> new BlockItemBase(LIGHT_BLUE_COBBLESTONE.get()));
    public static final RegistryObject<Item> LIGHT_GRAY_COBBLESTONE_ITEM = ITEMS.register("light_gray_cobblestone", () -> new BlockItemBase(LIGHT_GRAY_COBBLESTONE.get()));
    public static final RegistryObject<Item> LIME_COBBLESTONE_ITEM = ITEMS.register("lime_cobblestone", () -> new BlockItemBase(LIME_COBBLESTONE.get()));
    public static final RegistryObject<Item> MAGENTA_COBBLESTONE_ITEM = ITEMS.register("magenta_cobblestone", () -> new BlockItemBase(MAGENTA_COBBLESTONE.get()));
    public static final RegistryObject<Item> ORANGE_COBBLESTONE_ITEM = ITEMS.register("orange_cobblestone", () -> new BlockItemBase(ORANGE_COBBLESTONE.get()));
    public static final RegistryObject<Item> PINK_COBBLESTONE_ITEM = ITEMS.register("pink_cobblestone", () -> new BlockItemBase(PINK_COBBLESTONE.get()));
    public static final RegistryObject<Item> PURPLE_COBBLESTONE_ITEM = ITEMS.register("purple_cobblestone", () -> new BlockItemBase(PURPLE_COBBLESTONE.get()));
    public static final RegistryObject<Item> RED_COBBLESTONE_ITEM = ITEMS.register("red_cobblestone", () -> new BlockItemBase(RED_COBBLESTONE.get()));
    public static final RegistryObject<Item> WHITE_COBBLESTONE_ITEM = ITEMS.register("white_cobblestone", () -> new BlockItemBase(WHITE_COBBLESTONE.get()));
    public static final RegistryObject<Item> YELLOW_COBBLESTONE_ITEM = ITEMS.register("yellow_cobblestone", () -> new BlockItemBase(YELLOW_COBBLESTONE.get()));

    public static final RegistryObject<Item> BLACK_STONE_ITEM = ITEMS.register("black_stone", () -> new BlockItemBase(BLACK_STONE.get()));
    public static final RegistryObject<Item> BLUE_STONE_ITEM = ITEMS.register("blue_stone", () -> new BlockItemBase(BLUE_STONE.get()));
    public static final RegistryObject<Item> BROWN_STONE_ITEM = ITEMS.register("brown_stone", () -> new BlockItemBase(BROWN_STONE.get()));
    public static final RegistryObject<Item> CYAN_STONE_ITEM = ITEMS.register("cyan_stone", () -> new BlockItemBase(CYAN_STONE.get()));
    public static final RegistryObject<Item> GRAY_STONE_ITEM = ITEMS.register("gray_stone", () -> new BlockItemBase(GRAY_STONE.get()));
    public static final RegistryObject<Item> GREEN_STONE_ITEM = ITEMS.register("green_stone", () -> new BlockItemBase(GREEN_STONE.get()));
    public static final RegistryObject<Item> LIGHT_BLUE_STONE_ITEM = ITEMS.register("light_blue_stone", () -> new BlockItemBase(LIGHT_BLUE_STONE.get()));
    public static final RegistryObject<Item> LIGHT_GRAY_STONE_ITEM = ITEMS.register("light_gray_stone", () -> new BlockItemBase(LIGHT_GRAY_STONE.get()));
    public static final RegistryObject<Item> LIME_STONE_ITEM = ITEMS.register("lime_stone", () -> new BlockItemBase(LIME_STONE.get()));
    public static final RegistryObject<Item> MAGENTA_STONE_ITEM = ITEMS.register("magenta_stone", () -> new BlockItemBase(MAGENTA_STONE.get()));
    public static final RegistryObject<Item> ORANGE_STONE_ITEM = ITEMS.register("orange_stone", () -> new BlockItemBase(ORANGE_STONE.get()));
    public static final RegistryObject<Item> PINK_STONE_ITEM = ITEMS.register("pink_stone", () -> new BlockItemBase(PINK_STONE.get()));
    public static final RegistryObject<Item> PURPLE_STONE_ITEM = ITEMS.register("purple_stone", () -> new BlockItemBase(PURPLE_STONE.get()));
    public static final RegistryObject<Item> RED_STONE_ITEM = ITEMS.register("red_stone", () -> new BlockItemBase(RED_STONE.get()));
    public static final RegistryObject<Item> WHITE_STONE_ITEM = ITEMS.register("white_stone", () -> new BlockItemBase(WHITE_STONE.get()));
    public static final RegistryObject<Item> YELLOW_STONE_ITEM = ITEMS.register("yellow_stone", () -> new BlockItemBase(YELLOW_STONE.get()));

    // AUTO-GEN Furnace Blocks and Block Items
    /*public static final RegistryObject<Block> BLACK_FURNACE = BLOCKS.register("black_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> BLACK_FURNACE_ITEM = ITEMS.register("black_furnace", () -> new BlockItemBase(BLACK_FURNACE.get()));
    public static final RegistryObject<Block> BLUE_FURNACE = BLOCKS.register("blue_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> BLUE_FURNACE_ITEM = ITEMS.register("blue_furnace", () -> new BlockItemBase(BLUE_FURNACE.get()));
    public static final RegistryObject<Block> BROWN_FURNACE = BLOCKS.register("brown_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> BROWN_FURNACE_ITEM = ITEMS.register("brown_furnace", () -> new BlockItemBase(BROWN_FURNACE.get()));
    public static final RegistryObject<Block> CYAN_FURNACE = BLOCKS.register("cyan_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> CYAN_FURNACE_ITEM = ITEMS.register("cyan_furnace", () -> new BlockItemBase(CYAN_FURNACE.get()));
    public static final RegistryObject<Block> GRAY_FURNACE = BLOCKS.register("gray_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> GRAY_FURNACE_ITEM = ITEMS.register("gray_furnace", () -> new BlockItemBase(GRAY_FURNACE.get()));
    public static final RegistryObject<Block> GREEN_FURNACE = BLOCKS.register("green_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> GREEN_FURNACE_ITEM = ITEMS.register("green_furnace", () -> new BlockItemBase(GREEN_FURNACE.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_FURNACE = BLOCKS.register("light_blue_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> LIGHT_BLUE_FURNACE_ITEM = ITEMS.register("light_blue_furnace", () -> new BlockItemBase(LIGHT_BLUE_FURNACE.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_FURNACE = BLOCKS.register("light_gray_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> LIGHT_GRAY_FURNACE_ITEM = ITEMS.register("light_gray_furnace", () -> new BlockItemBase(LIGHT_GRAY_FURNACE.get()));
    public static final RegistryObject<Block> LIME_FURNACE = BLOCKS.register("lime_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> LIME_FURNACE_ITEM = ITEMS.register("lime_furnace", () -> new BlockItemBase(LIME_FURNACE.get()));
    public static final RegistryObject<Block> MAGENTA_FURNACE = BLOCKS.register("magenta_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> MAGENTA_FURNACE_ITEM = ITEMS.register("magenta_furnace", () -> new BlockItemBase(MAGENTA_FURNACE.get()));
    public static final RegistryObject<Block> ORANGE_FURNACE = BLOCKS.register("orange_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> ORANGE_FURNACE_ITEM = ITEMS.register("orange_furnace", () -> new BlockItemBase(ORANGE_FURNACE.get()));
    public static final RegistryObject<Block> PINK_FURNACE = BLOCKS.register("pink_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> PINK_FURNACE_ITEM = ITEMS.register("pink_furnace", () -> new BlockItemBase(PINK_FURNACE.get()));
    public static final RegistryObject<Block> PURPLE_FURNACE = BLOCKS.register("purple_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> PURPLE_FURNACE_ITEM = ITEMS.register("purple_furnace", () -> new BlockItemBase(PURPLE_FURNACE.get()));
    public static final RegistryObject<Block> RED_FURNACE = BLOCKS.register("red_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> RED_FURNACE_ITEM = ITEMS.register("red_furnace", () -> new BlockItemBase(RED_FURNACE.get()));
    public static final RegistryObject<Block> WHITE_FURNACE = BLOCKS.register("white_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> WHITE_FURNACE_ITEM = ITEMS.register("white_furnace", () -> new BlockItemBase(WHITE_FURNACE.get()));
    public static final RegistryObject<Block> YELLOW_FURNACE = BLOCKS.register("yellow_furnace", DyedFurnaceBlock::new);
    public static final RegistryObject<Item> YELLOW_FURNACE_ITEM = ITEMS.register("yellow_furnace", () -> new BlockItemBase(YELLOW_FURNACE.get()));*/

    // Auto-GEN dyed andesite stairs and slabs
    public static final RegistryObject<Block> BLACK_ANDESITE_STAIRS= BLOCKS.register("black_andesite_stairs", () -> new StairsBlock((() -> BLACK_ANDESITE.get().getDefaultState()), Block.Properties.from(BLACK_ANDESITE.get())));
    public static final RegistryObject<Item> BLACK_ANDESITE_STAIRS_ITEM = ITEMS.register("black_andesite_stairs", () -> new BlockItemBase(BLACK_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> BLACK_ANDESITE_SLAB= BLOCKS.register("black_andesite_slab", () -> new SlabBlock(Block.Properties.from(BLACK_ANDESITE.get())));
    public static final RegistryObject<Item> BLACK_ANDESITE_SLAB_ITEM = ITEMS.register("black_andesite_slab", () -> new BlockItemBase(BLACK_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> BLUE_ANDESITE_STAIRS= BLOCKS.register("blue_andesite_stairs", () -> new StairsBlock(() -> BLUE_ANDESITE.get().getDefaultState(), Block.Properties.from(BLUE_ANDESITE.get())));
    public static final RegistryObject<Item> BLUE_ANDESITE_STAIRS_ITEM = ITEMS.register("blue_andesite_stairs", () -> new BlockItemBase(BLUE_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> BLUE_ANDESITE_SLAB= BLOCKS.register("blue_andesite_slab", () -> new SlabBlock(Block.Properties.from(BLUE_ANDESITE.get())));
    public static final RegistryObject<Item> BLUE_ANDESITE_SLAB_ITEM = ITEMS.register("blue_andesite_slab", () -> new BlockItemBase(BLUE_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> BROWN_ANDESITE_STAIRS= BLOCKS.register("brown_andesite_stairs", () -> new StairsBlock(() -> BROWN_ANDESITE.get().getDefaultState(), Block.Properties.from(BROWN_ANDESITE.get())));
    public static final RegistryObject<Item> BROWN_ANDESITE_STAIRS_ITEM = ITEMS.register("brown_andesite_stairs", () -> new BlockItemBase(BROWN_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> BROWN_ANDESITE_SLAB= BLOCKS.register("brown_andesite_slab", () -> new SlabBlock(Block.Properties.from(BROWN_ANDESITE.get())));
    public static final RegistryObject<Item> BROWN_ANDESITE_SLAB_ITEM = ITEMS.register("brown_andesite_slab", () -> new BlockItemBase(BROWN_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> CYAN_ANDESITE_STAIRS= BLOCKS.register("cyan_andesite_stairs", () -> new StairsBlock(() -> CYAN_ANDESITE.get().getDefaultState(), Block.Properties.from(CYAN_ANDESITE.get())));
    public static final RegistryObject<Item> CYAN_ANDESITE_STAIRS_ITEM = ITEMS.register("cyan_andesite_stairs", () -> new BlockItemBase(CYAN_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> CYAN_ANDESITE_SLAB= BLOCKS.register("cyan_andesite_slab", () -> new SlabBlock(Block.Properties.from(CYAN_ANDESITE.get())));
    public static final RegistryObject<Item> CYAN_ANDESITE_SLAB_ITEM = ITEMS.register("cyan_andesite_slab", () -> new BlockItemBase(CYAN_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> GRAY_ANDESITE_STAIRS= BLOCKS.register("gray_andesite_stairs", () -> new StairsBlock(() -> GRAY_ANDESITE.get().getDefaultState(), Block.Properties.from(GRAY_ANDESITE.get())));
    public static final RegistryObject<Item> GRAY_ANDESITE_STAIRS_ITEM = ITEMS.register("gray_andesite_stairs", () -> new BlockItemBase(GRAY_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> GRAY_ANDESITE_SLAB= BLOCKS.register("gray_andesite_slab", () -> new SlabBlock(Block.Properties.from(GRAY_ANDESITE.get())));
    public static final RegistryObject<Item> GRAY_ANDESITE_SLAB_ITEM = ITEMS.register("gray_andesite_slab", () -> new BlockItemBase(GRAY_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> GREEN_ANDESITE_STAIRS= BLOCKS.register("green_andesite_stairs", () -> new StairsBlock(() -> GREEN_ANDESITE.get().getDefaultState(), Block.Properties.from(GREEN_ANDESITE.get())));
    public static final RegistryObject<Item> GREEN_ANDESITE_STAIRS_ITEM = ITEMS.register("green_andesite_stairs", () -> new BlockItemBase(GREEN_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> GREEN_ANDESITE_SLAB= BLOCKS.register("green_andesite_slab", () -> new SlabBlock(Block.Properties.from(GREEN_ANDESITE.get())));
    public static final RegistryObject<Item> GREEN_ANDESITE_SLAB_ITEM = ITEMS.register("green_andesite_slab", () -> new BlockItemBase(GREEN_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_ANDESITE_STAIRS= BLOCKS.register("light_blue_andesite_stairs", () -> new StairsBlock(() -> LIGHT_BLUE_ANDESITE.get().getDefaultState(), Block.Properties.from(LIGHT_BLUE_ANDESITE.get())));
    public static final RegistryObject<Item> LIGHT_BLUE_ANDESITE_STAIRS_ITEM = ITEMS.register("light_blue_andesite_stairs", () -> new BlockItemBase(LIGHT_BLUE_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_ANDESITE_SLAB= BLOCKS.register("light_blue_andesite_slab", () -> new SlabBlock(Block.Properties.from(LIGHT_BLUE_ANDESITE.get())));
    public static final RegistryObject<Item> LIGHT_BLUE_ANDESITE_SLAB_ITEM = ITEMS.register("light_blue_andesite_slab", () -> new BlockItemBase(LIGHT_BLUE_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_ANDESITE_STAIRS= BLOCKS.register("light_gray_andesite_stairs", () -> new StairsBlock(() -> LIGHT_GRAY_ANDESITE.get().getDefaultState(), Block.Properties.from(LIGHT_GRAY_ANDESITE.get())));
    public static final RegistryObject<Item> LIGHT_GRAY_ANDESITE_STAIRS_ITEM = ITEMS.register("light_gray_andesite_stairs", () -> new BlockItemBase(LIGHT_GRAY_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_ANDESITE_SLAB= BLOCKS.register("light_gray_andesite_slab", () -> new SlabBlock(Block.Properties.from(LIGHT_GRAY_ANDESITE.get())));
    public static final RegistryObject<Item> LIGHT_GRAY_ANDESITE_SLAB_ITEM = ITEMS.register("light_gray_andesite_slab", () -> new BlockItemBase(LIGHT_GRAY_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> LIME_ANDESITE_STAIRS= BLOCKS.register("lime_andesite_stairs", () -> new StairsBlock(() -> LIME_ANDESITE.get().getDefaultState(), Block.Properties.from(LIME_ANDESITE.get())));
    public static final RegistryObject<Item> LIME_ANDESITE_STAIRS_ITEM = ITEMS.register("lime_andesite_stairs", () -> new BlockItemBase(LIME_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> LIME_ANDESITE_SLAB= BLOCKS.register("lime_andesite_slab", () -> new SlabBlock(Block.Properties.from(LIME_ANDESITE.get())));
    public static final RegistryObject<Item> LIME_ANDESITE_SLAB_ITEM = ITEMS.register("lime_andesite_slab", () -> new BlockItemBase(LIME_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> MAGENTA_ANDESITE_STAIRS= BLOCKS.register("magenta_andesite_stairs", () -> new StairsBlock(() -> MAGENTA_ANDESITE.get().getDefaultState(), Block.Properties.from(MAGENTA_ANDESITE.get())));
    public static final RegistryObject<Item> MAGENTA_ANDESITE_STAIRS_ITEM = ITEMS.register("magenta_andesite_stairs", () -> new BlockItemBase(MAGENTA_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> MAGENTA_ANDESITE_SLAB= BLOCKS.register("magenta_andesite_slab", () -> new SlabBlock(Block.Properties.from(MAGENTA_ANDESITE.get())));
    public static final RegistryObject<Item> MAGENTA_ANDESITE_SLAB_ITEM = ITEMS.register("magenta_andesite_slab", () -> new BlockItemBase(MAGENTA_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> ORANGE_ANDESITE_STAIRS= BLOCKS.register("orange_andesite_stairs", () -> new StairsBlock(() -> ORANGE_ANDESITE.get().getDefaultState(), Block.Properties.from(ORANGE_ANDESITE.get())));
    public static final RegistryObject<Item> ORANGE_ANDESITE_STAIRS_ITEM = ITEMS.register("orange_andesite_stairs", () -> new BlockItemBase(ORANGE_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> ORANGE_ANDESITE_SLAB= BLOCKS.register("orange_andesite_slab", () -> new SlabBlock(Block.Properties.from(ORANGE_ANDESITE.get())));
    public static final RegistryObject<Item> ORANGE_ANDESITE_SLAB_ITEM = ITEMS.register("orange_andesite_slab", () -> new BlockItemBase(ORANGE_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> PINK_ANDESITE_STAIRS= BLOCKS.register("pink_andesite_stairs", () -> new StairsBlock(() -> PINK_ANDESITE.get().getDefaultState(), Block.Properties.from(PINK_ANDESITE.get())));
    public static final RegistryObject<Item> PINK_ANDESITE_STAIRS_ITEM = ITEMS.register("pink_andesite_stairs", () -> new BlockItemBase(PINK_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> PINK_ANDESITE_SLAB= BLOCKS.register("pink_andesite_slab", () -> new SlabBlock(Block.Properties.from(PINK_ANDESITE.get())));
    public static final RegistryObject<Item> PINK_ANDESITE_SLAB_ITEM = ITEMS.register("pink_andesite_slab", () -> new BlockItemBase(PINK_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> PURPLE_ANDESITE_STAIRS= BLOCKS.register("purple_andesite_stairs", () -> new StairsBlock(() -> PURPLE_ANDESITE.get().getDefaultState(), Block.Properties.from(PURPLE_ANDESITE.get())));
    public static final RegistryObject<Item> PURPLE_ANDESITE_STAIRS_ITEM = ITEMS.register("purple_andesite_stairs", () -> new BlockItemBase(PURPLE_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> PURPLE_ANDESITE_SLAB= BLOCKS.register("purple_andesite_slab", () -> new SlabBlock(Block.Properties.from(PURPLE_ANDESITE.get())));
    public static final RegistryObject<Item> PURPLE_ANDESITE_SLAB_ITEM = ITEMS.register("purple_andesite_slab", () -> new BlockItemBase(PURPLE_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> RED_ANDESITE_STAIRS= BLOCKS.register("red_andesite_stairs", () -> new StairsBlock(() -> RED_ANDESITE.get().getDefaultState(), Block.Properties.from(RED_ANDESITE.get())));
    public static final RegistryObject<Item> RED_ANDESITE_STAIRS_ITEM = ITEMS.register("red_andesite_stairs", () -> new BlockItemBase(RED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> RED_ANDESITE_SLAB= BLOCKS.register("red_andesite_slab", () -> new SlabBlock(Block.Properties.from(RED_ANDESITE.get())));
    public static final RegistryObject<Item> RED_ANDESITE_SLAB_ITEM = ITEMS.register("red_andesite_slab", () -> new BlockItemBase(RED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> WHITE_ANDESITE_STAIRS= BLOCKS.register("white_andesite_stairs", () -> new StairsBlock(() -> WHITE_ANDESITE.get().getDefaultState(), Block.Properties.from(WHITE_ANDESITE.get())));
    public static final RegistryObject<Item> WHITE_ANDESITE_STAIRS_ITEM = ITEMS.register("white_andesite_stairs", () -> new BlockItemBase(WHITE_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> WHITE_ANDESITE_SLAB= BLOCKS.register("white_andesite_slab", () -> new SlabBlock(Block.Properties.from(WHITE_ANDESITE.get())));
    public static final RegistryObject<Item> WHITE_ANDESITE_SLAB_ITEM = ITEMS.register("white_andesite_slab", () -> new BlockItemBase(WHITE_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> YELLOW_ANDESITE_STAIRS= BLOCKS.register("yellow_andesite_stairs", () -> new StairsBlock(() -> YELLOW_ANDESITE.get().getDefaultState(), Block.Properties.from(YELLOW_ANDESITE.get())));
    public static final RegistryObject<Item> YELLOW_ANDESITE_STAIRS_ITEM = ITEMS.register("yellow_andesite_stairs", () -> new BlockItemBase(YELLOW_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> YELLOW_ANDESITE_SLAB= BLOCKS.register("yellow_andesite_slab", () -> new SlabBlock(Block.Properties.from(YELLOW_ANDESITE.get())));
    public static final RegistryObject<Item> YELLOW_ANDESITE_SLAB_ITEM = ITEMS.register("yellow_andesite_slab", () -> new BlockItemBase(YELLOW_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> BLACK_POLISHED_ANDESITE_STAIRS= BLOCKS.register("black_polished_andesite_stairs", () -> new StairsBlock(() -> BLACK_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(BLACK_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> BLACK_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("black_polished_andesite_stairs", () -> new BlockItemBase(BLACK_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> BLACK_POLISHED_ANDESITE_SLAB= BLOCKS.register("black_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(BLACK_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> BLACK_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("black_polished_andesite_slab", () -> new BlockItemBase(BLACK_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> BLUE_POLISHED_ANDESITE_STAIRS= BLOCKS.register("blue_polished_andesite_stairs", () -> new StairsBlock(() -> BLUE_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(BLUE_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> BLUE_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("blue_polished_andesite_stairs", () -> new BlockItemBase(BLUE_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> BLUE_POLISHED_ANDESITE_SLAB= BLOCKS.register("blue_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(BLUE_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> BLUE_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("blue_polished_andesite_slab", () -> new BlockItemBase(BLUE_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> BROWN_POLISHED_ANDESITE_STAIRS= BLOCKS.register("brown_polished_andesite_stairs", () -> new StairsBlock(() -> BROWN_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(BROWN_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> BROWN_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("brown_polished_andesite_stairs", () -> new BlockItemBase(BROWN_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> BROWN_POLISHED_ANDESITE_SLAB= BLOCKS.register("brown_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(BROWN_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> BROWN_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("brown_polished_andesite_slab", () -> new BlockItemBase(BROWN_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> CYAN_POLISHED_ANDESITE_STAIRS= BLOCKS.register("cyan_polished_andesite_stairs", () -> new StairsBlock(() -> CYAN_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(CYAN_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> CYAN_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("cyan_polished_andesite_stairs", () -> new BlockItemBase(CYAN_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> CYAN_POLISHED_ANDESITE_SLAB= BLOCKS.register("cyan_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(CYAN_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> CYAN_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("cyan_polished_andesite_slab", () -> new BlockItemBase(CYAN_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> GRAY_POLISHED_ANDESITE_STAIRS= BLOCKS.register("gray_polished_andesite_stairs", () -> new StairsBlock(() -> GRAY_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(GRAY_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> GRAY_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("gray_polished_andesite_stairs", () -> new BlockItemBase(GRAY_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> GRAY_POLISHED_ANDESITE_SLAB= BLOCKS.register("gray_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(GRAY_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> GRAY_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("gray_polished_andesite_slab", () -> new BlockItemBase(GRAY_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> GREEN_POLISHED_ANDESITE_STAIRS= BLOCKS.register("green_polished_andesite_stairs", () -> new StairsBlock(() -> GREEN_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(GREEN_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> GREEN_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("green_polished_andesite_stairs", () -> new BlockItemBase(GREEN_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> GREEN_POLISHED_ANDESITE_SLAB= BLOCKS.register("green_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(GREEN_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> GREEN_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("green_polished_andesite_slab", () -> new BlockItemBase(GREEN_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_POLISHED_ANDESITE_STAIRS= BLOCKS.register("light_blue_polished_andesite_stairs", () -> new StairsBlock(() -> LIGHT_BLUE_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(LIGHT_BLUE_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> LIGHT_BLUE_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("light_blue_polished_andesite_stairs", () -> new BlockItemBase(LIGHT_BLUE_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_POLISHED_ANDESITE_SLAB= BLOCKS.register("light_blue_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(LIGHT_BLUE_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> LIGHT_BLUE_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("light_blue_polished_andesite_slab", () -> new BlockItemBase(LIGHT_BLUE_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_POLISHED_ANDESITE_STAIRS= BLOCKS.register("light_gray_polished_andesite_stairs", () -> new StairsBlock(() -> LIGHT_GRAY_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(LIGHT_GRAY_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> LIGHT_GRAY_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("light_gray_polished_andesite_stairs", () -> new BlockItemBase(LIGHT_GRAY_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_POLISHED_ANDESITE_SLAB= BLOCKS.register("light_gray_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(LIGHT_GRAY_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> LIGHT_GRAY_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("light_gray_polished_andesite_slab", () -> new BlockItemBase(LIGHT_GRAY_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> LIME_POLISHED_ANDESITE_STAIRS= BLOCKS.register("lime_polished_andesite_stairs", () -> new StairsBlock(() -> LIME_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(LIME_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> LIME_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("lime_polished_andesite_stairs", () -> new BlockItemBase(LIME_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> LIME_POLISHED_ANDESITE_SLAB= BLOCKS.register("lime_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(LIME_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> LIME_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("lime_polished_andesite_slab", () -> new BlockItemBase(LIME_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> MAGENTA_POLISHED_ANDESITE_STAIRS= BLOCKS.register("magenta_polished_andesite_stairs", () -> new StairsBlock(() -> MAGENTA_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(MAGENTA_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> MAGENTA_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("magenta_polished_andesite_stairs", () -> new BlockItemBase(MAGENTA_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> MAGENTA_POLISHED_ANDESITE_SLAB= BLOCKS.register("magenta_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(MAGENTA_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> MAGENTA_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("magenta_polished_andesite_slab", () -> new BlockItemBase(MAGENTA_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> ORANGE_POLISHED_ANDESITE_STAIRS= BLOCKS.register("orange_polished_andesite_stairs", () -> new StairsBlock(() -> ORANGE_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(ORANGE_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> ORANGE_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("orange_polished_andesite_stairs", () -> new BlockItemBase(ORANGE_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> ORANGE_POLISHED_ANDESITE_SLAB= BLOCKS.register("orange_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(ORANGE_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> ORANGE_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("orange_polished_andesite_slab", () -> new BlockItemBase(ORANGE_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> PINK_POLISHED_ANDESITE_STAIRS= BLOCKS.register("pink_polished_andesite_stairs", () -> new StairsBlock(() -> PINK_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(PINK_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> PINK_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("pink_polished_andesite_stairs", () -> new BlockItemBase(PINK_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> PINK_POLISHED_ANDESITE_SLAB= BLOCKS.register("pink_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(PINK_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> PINK_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("pink_polished_andesite_slab", () -> new BlockItemBase(PINK_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> PURPLE_POLISHED_ANDESITE_STAIRS= BLOCKS.register("purple_polished_andesite_stairs", () -> new StairsBlock(() -> PURPLE_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(PURPLE_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> PURPLE_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("purple_polished_andesite_stairs", () -> new BlockItemBase(PURPLE_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> PURPLE_POLISHED_ANDESITE_SLAB= BLOCKS.register("purple_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(PURPLE_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> PURPLE_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("purple_polished_andesite_slab", () -> new BlockItemBase(PURPLE_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> RED_POLISHED_ANDESITE_STAIRS= BLOCKS.register("red_polished_andesite_stairs", () -> new StairsBlock(() -> RED_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(RED_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> RED_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("red_polished_andesite_stairs", () -> new BlockItemBase(RED_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> RED_POLISHED_ANDESITE_SLAB= BLOCKS.register("red_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(RED_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> RED_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("red_polished_andesite_slab", () -> new BlockItemBase(RED_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> WHITE_POLISHED_ANDESITE_STAIRS= BLOCKS.register("white_polished_andesite_stairs", () -> new StairsBlock(() -> WHITE_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(WHITE_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> WHITE_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("white_polished_andesite_stairs", () -> new BlockItemBase(WHITE_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> WHITE_POLISHED_ANDESITE_SLAB= BLOCKS.register("white_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(WHITE_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> WHITE_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("white_polished_andesite_slab", () -> new BlockItemBase(WHITE_POLISHED_ANDESITE_SLAB.get()));
    public static final RegistryObject<Block> YELLOW_POLISHED_ANDESITE_STAIRS= BLOCKS.register("yellow_polished_andesite_stairs", () -> new StairsBlock(() -> YELLOW_POLISHED_ANDESITE.get().getDefaultState(), Block.Properties.from(YELLOW_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> YELLOW_POLISHED_ANDESITE_STAIRS_ITEM = ITEMS.register("yellow_polished_andesite_stairs", () -> new BlockItemBase(YELLOW_POLISHED_ANDESITE_STAIRS.get()));
    public static final RegistryObject<Block> YELLOW_POLISHED_ANDESITE_SLAB= BLOCKS.register("yellow_polished_andesite_slab", () -> new SlabBlock(Block.Properties.from(YELLOW_POLISHED_ANDESITE.get())));
    public static final RegistryObject<Item> YELLOW_POLISHED_ANDESITE_SLAB_ITEM = ITEMS.register("yellow_polished_andesite_slab", () -> new BlockItemBase(YELLOW_POLISHED_ANDESITE_SLAB.get()));

    // Auto-GEN dyed cobble(stone) stairs and slabs
    public static final RegistryObject<Block> BLACK_COBBLESTONE_STAIRS= BLOCKS.register("black_cobblestone_stairs", () -> new StairsBlock(() -> BLACK_COBBLESTONE.get().getDefaultState(), Block.Properties.from(BLACK_COBBLESTONE.get())));
    public static final RegistryObject<Item> BLACK_COBBLESTONE_STAIRS_ITEM = ITEMS.register("black_cobblestone_stairs", () -> new BlockItemBase(BLACK_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> BLACK_COBBLESTONE_SLAB= BLOCKS.register("black_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(BLACK_COBBLESTONE.get())));
    public static final RegistryObject<Item> BLACK_COBBLESTONE_SLAB_ITEM = ITEMS.register("black_cobblestone_slab", () -> new BlockItemBase(BLACK_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> BLUE_COBBLESTONE_STAIRS= BLOCKS.register("blue_cobblestone_stairs", () -> new StairsBlock(() -> BLUE_COBBLESTONE.get().getDefaultState(), Block.Properties.from(BLUE_COBBLESTONE.get())));
    public static final RegistryObject<Item> BLUE_COBBLESTONE_STAIRS_ITEM = ITEMS.register("blue_cobblestone_stairs", () -> new BlockItemBase(BLUE_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> BLUE_COBBLESTONE_SLAB= BLOCKS.register("blue_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(BLUE_COBBLESTONE.get())));
    public static final RegistryObject<Item> BLUE_COBBLESTONE_SLAB_ITEM = ITEMS.register("blue_cobblestone_slab", () -> new BlockItemBase(BLUE_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> BROWN_COBBLESTONE_STAIRS= BLOCKS.register("brown_cobblestone_stairs", () -> new StairsBlock(() -> BROWN_COBBLESTONE.get().getDefaultState(), Block.Properties.from(BROWN_COBBLESTONE.get())));
    public static final RegistryObject<Item> BROWN_COBBLESTONE_STAIRS_ITEM = ITEMS.register("brown_cobblestone_stairs", () -> new BlockItemBase(BROWN_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> BROWN_COBBLESTONE_SLAB= BLOCKS.register("brown_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(BROWN_COBBLESTONE.get())));
    public static final RegistryObject<Item> BROWN_COBBLESTONE_SLAB_ITEM = ITEMS.register("brown_cobblestone_slab", () -> new BlockItemBase(BROWN_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> CYAN_COBBLESTONE_STAIRS= BLOCKS.register("cyan_cobblestone_stairs", () -> new StairsBlock(() -> CYAN_COBBLESTONE.get().getDefaultState(), Block.Properties.from(CYAN_COBBLESTONE.get())));
    public static final RegistryObject<Item> CYAN_COBBLESTONE_STAIRS_ITEM = ITEMS.register("cyan_cobblestone_stairs", () -> new BlockItemBase(CYAN_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> CYAN_COBBLESTONE_SLAB= BLOCKS.register("cyan_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(CYAN_COBBLESTONE.get())));
    public static final RegistryObject<Item> CYAN_COBBLESTONE_SLAB_ITEM = ITEMS.register("cyan_cobblestone_slab", () -> new BlockItemBase(CYAN_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> GRAY_COBBLESTONE_STAIRS= BLOCKS.register("gray_cobblestone_stairs", () -> new StairsBlock(() -> GRAY_COBBLESTONE.get().getDefaultState(), Block.Properties.from(GRAY_COBBLESTONE.get())));
    public static final RegistryObject<Item> GRAY_COBBLESTONE_STAIRS_ITEM = ITEMS.register("gray_cobblestone_stairs", () -> new BlockItemBase(GRAY_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> GRAY_COBBLESTONE_SLAB= BLOCKS.register("gray_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(GRAY_COBBLESTONE.get())));
    public static final RegistryObject<Item> GRAY_COBBLESTONE_SLAB_ITEM = ITEMS.register("gray_cobblestone_slab", () -> new BlockItemBase(GRAY_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> GREEN_COBBLESTONE_STAIRS= BLOCKS.register("green_cobblestone_stairs", () -> new StairsBlock(() -> GREEN_COBBLESTONE.get().getDefaultState(), Block.Properties.from(GREEN_COBBLESTONE.get())));
    public static final RegistryObject<Item> GREEN_COBBLESTONE_STAIRS_ITEM = ITEMS.register("green_cobblestone_stairs", () -> new BlockItemBase(GREEN_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> GREEN_COBBLESTONE_SLAB= BLOCKS.register("green_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(GREEN_COBBLESTONE.get())));
    public static final RegistryObject<Item> GREEN_COBBLESTONE_SLAB_ITEM = ITEMS.register("green_cobblestone_slab", () -> new BlockItemBase(GREEN_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_COBBLESTONE_STAIRS= BLOCKS.register("light_blue_cobblestone_stairs", () -> new StairsBlock(() -> LIGHT_BLUE_COBBLESTONE.get().getDefaultState(), Block.Properties.from(LIGHT_BLUE_COBBLESTONE.get())));
    public static final RegistryObject<Item> LIGHT_BLUE_COBBLESTONE_STAIRS_ITEM = ITEMS.register("light_blue_cobblestone_stairs", () -> new BlockItemBase(LIGHT_BLUE_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_COBBLESTONE_SLAB= BLOCKS.register("light_blue_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(LIGHT_BLUE_COBBLESTONE.get())));
    public static final RegistryObject<Item> LIGHT_BLUE_COBBLESTONE_SLAB_ITEM = ITEMS.register("light_blue_cobblestone_slab", () -> new BlockItemBase(LIGHT_BLUE_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_COBBLESTONE_STAIRS= BLOCKS.register("light_gray_cobblestone_stairs", () -> new StairsBlock(() -> LIGHT_GRAY_COBBLESTONE.get().getDefaultState(), Block.Properties.from(LIGHT_GRAY_COBBLESTONE.get())));
    public static final RegistryObject<Item> LIGHT_GRAY_COBBLESTONE_STAIRS_ITEM = ITEMS.register("light_gray_cobblestone_stairs", () -> new BlockItemBase(LIGHT_GRAY_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_COBBLESTONE_SLAB= BLOCKS.register("light_gray_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(LIGHT_GRAY_COBBLESTONE.get())));
    public static final RegistryObject<Item> LIGHT_GRAY_COBBLESTONE_SLAB_ITEM = ITEMS.register("light_gray_cobblestone_slab", () -> new BlockItemBase(LIGHT_GRAY_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> LIME_COBBLESTONE_STAIRS= BLOCKS.register("lime_cobblestone_stairs", () -> new StairsBlock(() -> LIME_COBBLESTONE.get().getDefaultState(), Block.Properties.from(LIME_COBBLESTONE.get())));
    public static final RegistryObject<Item> LIME_COBBLESTONE_STAIRS_ITEM = ITEMS.register("lime_cobblestone_stairs", () -> new BlockItemBase(LIME_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> LIME_COBBLESTONE_SLAB= BLOCKS.register("lime_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(LIME_COBBLESTONE.get())));
    public static final RegistryObject<Item> LIME_COBBLESTONE_SLAB_ITEM = ITEMS.register("lime_cobblestone_slab", () -> new BlockItemBase(LIME_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> MAGENTA_COBBLESTONE_STAIRS= BLOCKS.register("magenta_cobblestone_stairs", () -> new StairsBlock(() -> MAGENTA_COBBLESTONE.get().getDefaultState(), Block.Properties.from(MAGENTA_COBBLESTONE.get())));
    public static final RegistryObject<Item> MAGENTA_COBBLESTONE_STAIRS_ITEM = ITEMS.register("magenta_cobblestone_stairs", () -> new BlockItemBase(MAGENTA_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> MAGENTA_COBBLESTONE_SLAB= BLOCKS.register("magenta_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(MAGENTA_COBBLESTONE.get())));
    public static final RegistryObject<Item> MAGENTA_COBBLESTONE_SLAB_ITEM = ITEMS.register("magenta_cobblestone_slab", () -> new BlockItemBase(MAGENTA_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> ORANGE_COBBLESTONE_STAIRS= BLOCKS.register("orange_cobblestone_stairs", () -> new StairsBlock(() -> ORANGE_COBBLESTONE.get().getDefaultState(), Block.Properties.from(ORANGE_COBBLESTONE.get())));
    public static final RegistryObject<Item> ORANGE_COBBLESTONE_STAIRS_ITEM = ITEMS.register("orange_cobblestone_stairs", () -> new BlockItemBase(ORANGE_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> ORANGE_COBBLESTONE_SLAB= BLOCKS.register("orange_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(ORANGE_COBBLESTONE.get())));
    public static final RegistryObject<Item> ORANGE_COBBLESTONE_SLAB_ITEM = ITEMS.register("orange_cobblestone_slab", () -> new BlockItemBase(ORANGE_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> PINK_COBBLESTONE_STAIRS= BLOCKS.register("pink_cobblestone_stairs", () -> new StairsBlock(() -> PINK_COBBLESTONE.get().getDefaultState(), Block.Properties.from(PINK_COBBLESTONE.get())));
    public static final RegistryObject<Item> PINK_COBBLESTONE_STAIRS_ITEM = ITEMS.register("pink_cobblestone_stairs", () -> new BlockItemBase(PINK_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> PINK_COBBLESTONE_SLAB= BLOCKS.register("pink_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(PINK_COBBLESTONE.get())));
    public static final RegistryObject<Item> PINK_COBBLESTONE_SLAB_ITEM = ITEMS.register("pink_cobblestone_slab", () -> new BlockItemBase(PINK_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> PURPLE_COBBLESTONE_STAIRS= BLOCKS.register("purple_cobblestone_stairs", () -> new StairsBlock(() -> PURPLE_COBBLESTONE.get().getDefaultState(), Block.Properties.from(PURPLE_COBBLESTONE.get())));
    public static final RegistryObject<Item> PURPLE_COBBLESTONE_STAIRS_ITEM = ITEMS.register("purple_cobblestone_stairs", () -> new BlockItemBase(PURPLE_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> PURPLE_COBBLESTONE_SLAB= BLOCKS.register("purple_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(PURPLE_COBBLESTONE.get())));
    public static final RegistryObject<Item> PURPLE_COBBLESTONE_SLAB_ITEM = ITEMS.register("purple_cobblestone_slab", () -> new BlockItemBase(PURPLE_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> RED_COBBLESTONE_STAIRS= BLOCKS.register("red_cobblestone_stairs", () -> new StairsBlock(() -> RED_COBBLESTONE.get().getDefaultState(), Block.Properties.from(RED_COBBLESTONE.get())));
    public static final RegistryObject<Item> RED_COBBLESTONE_STAIRS_ITEM = ITEMS.register("red_cobblestone_stairs", () -> new BlockItemBase(RED_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> RED_COBBLESTONE_SLAB= BLOCKS.register("red_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(RED_COBBLESTONE.get())));
    public static final RegistryObject<Item> RED_COBBLESTONE_SLAB_ITEM = ITEMS.register("red_cobblestone_slab", () -> new BlockItemBase(RED_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> WHITE_COBBLESTONE_STAIRS= BLOCKS.register("white_cobblestone_stairs", () -> new StairsBlock(() -> WHITE_COBBLESTONE.get().getDefaultState(), Block.Properties.from(WHITE_COBBLESTONE.get())));
    public static final RegistryObject<Item> WHITE_COBBLESTONE_STAIRS_ITEM = ITEMS.register("white_cobblestone_stairs", () -> new BlockItemBase(WHITE_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> WHITE_COBBLESTONE_SLAB= BLOCKS.register("white_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(WHITE_COBBLESTONE.get())));
    public static final RegistryObject<Item> WHITE_COBBLESTONE_SLAB_ITEM = ITEMS.register("white_cobblestone_slab", () -> new BlockItemBase(WHITE_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> YELLOW_COBBLESTONE_STAIRS= BLOCKS.register("yellow_cobblestone_stairs", () -> new StairsBlock(() -> YELLOW_COBBLESTONE.get().getDefaultState(), Block.Properties.from(YELLOW_COBBLESTONE.get())));
    public static final RegistryObject<Item> YELLOW_COBBLESTONE_STAIRS_ITEM = ITEMS.register("yellow_cobblestone_stairs", () -> new BlockItemBase(YELLOW_COBBLESTONE_STAIRS.get()));
    public static final RegistryObject<Block> YELLOW_COBBLESTONE_SLAB= BLOCKS.register("yellow_cobblestone_slab", () -> new SlabBlock(Block.Properties.from(YELLOW_COBBLESTONE.get())));
    public static final RegistryObject<Item> YELLOW_COBBLESTONE_SLAB_ITEM = ITEMS.register("yellow_cobblestone_slab", () -> new BlockItemBase(YELLOW_COBBLESTONE_SLAB.get()));
    public static final RegistryObject<Block> BLACK_STONE_STAIRS= BLOCKS.register("black_stone_stairs", () -> new StairsBlock(() -> BLACK_STONE.get().getDefaultState(), Block.Properties.from(BLACK_STONE.get())));
    public static final RegistryObject<Item> BLACK_STONE_STAIRS_ITEM = ITEMS.register("black_stone_stairs", () -> new BlockItemBase(BLACK_STONE_STAIRS.get()));
    public static final RegistryObject<Block> BLACK_STONE_SLAB= BLOCKS.register("black_stone_slab", () -> new SlabBlock(Block.Properties.from(BLACK_STONE.get())));
    public static final RegistryObject<Item> BLACK_STONE_SLAB_ITEM = ITEMS.register("black_stone_slab", () -> new BlockItemBase(BLACK_STONE_SLAB.get()));
    public static final RegistryObject<Block> BLUE_STONE_STAIRS= BLOCKS.register("blue_stone_stairs", () -> new StairsBlock(() -> BLUE_STONE.get().getDefaultState(), Block.Properties.from(BLUE_STONE.get())));
    public static final RegistryObject<Item> BLUE_STONE_STAIRS_ITEM = ITEMS.register("blue_stone_stairs", () -> new BlockItemBase(BLUE_STONE_STAIRS.get()));
    public static final RegistryObject<Block> BLUE_STONE_SLAB= BLOCKS.register("blue_stone_slab", () -> new SlabBlock(Block.Properties.from(BLUE_STONE.get())));
    public static final RegistryObject<Item> BLUE_STONE_SLAB_ITEM = ITEMS.register("blue_stone_slab", () -> new BlockItemBase(BLUE_STONE_SLAB.get()));
    public static final RegistryObject<Block> BROWN_STONE_STAIRS= BLOCKS.register("brown_stone_stairs", () -> new StairsBlock(() -> BROWN_STONE.get().getDefaultState(), Block.Properties.from(BROWN_STONE.get())));
    public static final RegistryObject<Item> BROWN_STONE_STAIRS_ITEM = ITEMS.register("brown_stone_stairs", () -> new BlockItemBase(BROWN_STONE_STAIRS.get()));
    public static final RegistryObject<Block> BROWN_STONE_SLAB= BLOCKS.register("brown_stone_slab", () -> new SlabBlock(Block.Properties.from(BROWN_STONE.get())));
    public static final RegistryObject<Item> BROWN_STONE_SLAB_ITEM = ITEMS.register("brown_stone_slab", () -> new BlockItemBase(BROWN_STONE_SLAB.get()));
    public static final RegistryObject<Block> CYAN_STONE_STAIRS= BLOCKS.register("cyan_stone_stairs", () -> new StairsBlock(() -> CYAN_STONE.get().getDefaultState(), Block.Properties.from(CYAN_STONE.get())));
    public static final RegistryObject<Item> CYAN_STONE_STAIRS_ITEM = ITEMS.register("cyan_stone_stairs", () -> new BlockItemBase(CYAN_STONE_STAIRS.get()));
    public static final RegistryObject<Block> CYAN_STONE_SLAB= BLOCKS.register("cyan_stone_slab", () -> new SlabBlock(Block.Properties.from(CYAN_STONE.get())));
    public static final RegistryObject<Item> CYAN_STONE_SLAB_ITEM = ITEMS.register("cyan_stone_slab", () -> new BlockItemBase(CYAN_STONE_SLAB.get()));
    public static final RegistryObject<Block> GRAY_STONE_STAIRS= BLOCKS.register("gray_stone_stairs", () -> new StairsBlock(() -> GRAY_STONE.get().getDefaultState(), Block.Properties.from(GRAY_STONE.get())));
    public static final RegistryObject<Item> GRAY_STONE_STAIRS_ITEM = ITEMS.register("gray_stone_stairs", () -> new BlockItemBase(GRAY_STONE_STAIRS.get()));
    public static final RegistryObject<Block> GRAY_STONE_SLAB= BLOCKS.register("gray_stone_slab", () -> new SlabBlock(Block.Properties.from(GRAY_STONE.get())));
    public static final RegistryObject<Item> GRAY_STONE_SLAB_ITEM = ITEMS.register("gray_stone_slab", () -> new BlockItemBase(GRAY_STONE_SLAB.get()));
    public static final RegistryObject<Block> GREEN_STONE_STAIRS= BLOCKS.register("green_stone_stairs", () -> new StairsBlock(() -> GREEN_STONE.get().getDefaultState(), Block.Properties.from(GREEN_STONE.get())));
    public static final RegistryObject<Item> GREEN_STONE_STAIRS_ITEM = ITEMS.register("green_stone_stairs", () -> new BlockItemBase(GREEN_STONE_STAIRS.get()));
    public static final RegistryObject<Block> GREEN_STONE_SLAB= BLOCKS.register("green_stone_slab", () -> new SlabBlock(Block.Properties.from(GREEN_STONE.get())));
    public static final RegistryObject<Item> GREEN_STONE_SLAB_ITEM = ITEMS.register("green_stone_slab", () -> new BlockItemBase(GREEN_STONE_SLAB.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_STONE_STAIRS= BLOCKS.register("light_blue_stone_stairs", () -> new StairsBlock(() -> LIGHT_BLUE_STONE.get().getDefaultState(), Block.Properties.from(LIGHT_BLUE_STONE.get())));
    public static final RegistryObject<Item> LIGHT_BLUE_STONE_STAIRS_ITEM = ITEMS.register("light_blue_stone_stairs", () -> new BlockItemBase(LIGHT_BLUE_STONE_STAIRS.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_STONE_SLAB= BLOCKS.register("light_blue_stone_slab", () -> new SlabBlock(Block.Properties.from(LIGHT_BLUE_STONE.get())));
    public static final RegistryObject<Item> LIGHT_BLUE_STONE_SLAB_ITEM = ITEMS.register("light_blue_stone_slab", () -> new BlockItemBase(LIGHT_BLUE_STONE_SLAB.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_STONE_STAIRS= BLOCKS.register("light_gray_stone_stairs", () -> new StairsBlock(() -> LIGHT_GRAY_STONE.get().getDefaultState(), Block.Properties.from(LIGHT_GRAY_STONE.get())));
    public static final RegistryObject<Item> LIGHT_GRAY_STONE_STAIRS_ITEM = ITEMS.register("light_gray_stone_stairs", () -> new BlockItemBase(LIGHT_GRAY_STONE_STAIRS.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_STONE_SLAB= BLOCKS.register("light_gray_stone_slab", () -> new SlabBlock(Block.Properties.from(LIGHT_GRAY_STONE.get())));
    public static final RegistryObject<Item> LIGHT_GRAY_STONE_SLAB_ITEM = ITEMS.register("light_gray_stone_slab", () -> new BlockItemBase(LIGHT_GRAY_STONE_SLAB.get()));
    public static final RegistryObject<Block> LIME_STONE_STAIRS= BLOCKS.register("lime_stone_stairs", () -> new StairsBlock(() -> LIME_STONE.get().getDefaultState(), Block.Properties.from(LIME_STONE.get())));
    public static final RegistryObject<Item> LIME_STONE_STAIRS_ITEM = ITEMS.register("lime_stone_stairs", () -> new BlockItemBase(LIME_STONE_STAIRS.get()));
    public static final RegistryObject<Block> LIME_STONE_SLAB= BLOCKS.register("lime_stone_slab", () -> new SlabBlock(Block.Properties.from(LIME_STONE.get())));
    public static final RegistryObject<Item> LIME_STONE_SLAB_ITEM = ITEMS.register("lime_stone_slab", () -> new BlockItemBase(LIME_STONE_SLAB.get()));
    public static final RegistryObject<Block> MAGENTA_STONE_STAIRS= BLOCKS.register("magenta_stone_stairs", () -> new StairsBlock(() -> MAGENTA_STONE.get().getDefaultState(), Block.Properties.from(MAGENTA_STONE.get())));
    public static final RegistryObject<Item> MAGENTA_STONE_STAIRS_ITEM = ITEMS.register("magenta_stone_stairs", () -> new BlockItemBase(MAGENTA_STONE_STAIRS.get()));
    public static final RegistryObject<Block> MAGENTA_STONE_SLAB= BLOCKS.register("magenta_stone_slab", () -> new SlabBlock(Block.Properties.from(MAGENTA_STONE.get())));
    public static final RegistryObject<Item> MAGENTA_STONE_SLAB_ITEM = ITEMS.register("magenta_stone_slab", () -> new BlockItemBase(MAGENTA_STONE_SLAB.get()));
    public static final RegistryObject<Block> ORANGE_STONE_STAIRS= BLOCKS.register("orange_stone_stairs", () -> new StairsBlock(() -> ORANGE_STONE.get().getDefaultState(), Block.Properties.from(ORANGE_STONE.get())));
    public static final RegistryObject<Item> ORANGE_STONE_STAIRS_ITEM = ITEMS.register("orange_stone_stairs", () -> new BlockItemBase(ORANGE_STONE_STAIRS.get()));
    public static final RegistryObject<Block> ORANGE_STONE_SLAB= BLOCKS.register("orange_stone_slab", () -> new SlabBlock(Block.Properties.from(ORANGE_STONE.get())));
    public static final RegistryObject<Item> ORANGE_STONE_SLAB_ITEM = ITEMS.register("orange_stone_slab", () -> new BlockItemBase(ORANGE_STONE_SLAB.get()));
    public static final RegistryObject<Block> PINK_STONE_STAIRS= BLOCKS.register("pink_stone_stairs", () -> new StairsBlock(() -> PINK_STONE.get().getDefaultState(), Block.Properties.from(PINK_STONE.get())));
    public static final RegistryObject<Item> PINK_STONE_STAIRS_ITEM = ITEMS.register("pink_stone_stairs", () -> new BlockItemBase(PINK_STONE_STAIRS.get()));
    public static final RegistryObject<Block> PINK_STONE_SLAB= BLOCKS.register("pink_stone_slab", () -> new SlabBlock(Block.Properties.from(PINK_STONE.get())));
    public static final RegistryObject<Item> PINK_STONE_SLAB_ITEM = ITEMS.register("pink_stone_slab", () -> new BlockItemBase(PINK_STONE_SLAB.get()));
    public static final RegistryObject<Block> PURPLE_STONE_STAIRS= BLOCKS.register("purple_stone_stairs", () -> new StairsBlock(() -> PURPLE_STONE.get().getDefaultState(), Block.Properties.from(PURPLE_STONE.get())));
    public static final RegistryObject<Item> PURPLE_STONE_STAIRS_ITEM = ITEMS.register("purple_stone_stairs", () -> new BlockItemBase(PURPLE_STONE_STAIRS.get()));
    public static final RegistryObject<Block> PURPLE_STONE_SLAB= BLOCKS.register("purple_stone_slab", () -> new SlabBlock(Block.Properties.from(PURPLE_STONE.get())));
    public static final RegistryObject<Item> PURPLE_STONE_SLAB_ITEM = ITEMS.register("purple_stone_slab", () -> new BlockItemBase(PURPLE_STONE_SLAB.get()));
    public static final RegistryObject<Block> RED_STONE_STAIRS= BLOCKS.register("red_stone_stairs", () -> new StairsBlock(() -> RED_STONE.get().getDefaultState(), Block.Properties.from(RED_STONE.get())));
    public static final RegistryObject<Item> RED_STONE_STAIRS_ITEM = ITEMS.register("red_stone_stairs", () -> new BlockItemBase(RED_STONE_STAIRS.get()));
    public static final RegistryObject<Block> RED_STONE_SLAB= BLOCKS.register("red_stone_slab", () -> new SlabBlock(Block.Properties.from(RED_STONE.get())));
    public static final RegistryObject<Item> RED_STONE_SLAB_ITEM = ITEMS.register("red_stone_slab", () -> new BlockItemBase(RED_STONE_SLAB.get()));
    public static final RegistryObject<Block> WHITE_STONE_STAIRS= BLOCKS.register("white_stone_stairs", () -> new StairsBlock(() -> WHITE_STONE.get().getDefaultState(), Block.Properties.from(WHITE_STONE.get())));
    public static final RegistryObject<Item> WHITE_STONE_STAIRS_ITEM = ITEMS.register("white_stone_stairs", () -> new BlockItemBase(WHITE_STONE_STAIRS.get()));
    public static final RegistryObject<Block> WHITE_STONE_SLAB= BLOCKS.register("white_stone_slab", () -> new SlabBlock(Block.Properties.from(WHITE_STONE.get())));
    public static final RegistryObject<Item> WHITE_STONE_SLAB_ITEM = ITEMS.register("white_stone_slab", () -> new BlockItemBase(WHITE_STONE_SLAB.get()));
    public static final RegistryObject<Block> YELLOW_STONE_STAIRS= BLOCKS.register("yellow_stone_stairs", () -> new StairsBlock(() -> YELLOW_STONE.get().getDefaultState(), Block.Properties.from(YELLOW_STONE.get())));
    public static final RegistryObject<Item> YELLOW_STONE_STAIRS_ITEM = ITEMS.register("yellow_stone_stairs", () -> new BlockItemBase(YELLOW_STONE_STAIRS.get()));
    public static final RegistryObject<Block> YELLOW_STONE_SLAB= BLOCKS.register("yellow_stone_slab", () -> new SlabBlock(Block.Properties.from(YELLOW_STONE.get())));
    public static final RegistryObject<Item> YELLOW_STONE_SLAB_ITEM = ITEMS.register("yellow_stone_slab", () -> new BlockItemBase(YELLOW_STONE_SLAB.get()));

    // Auto-GEN dyed stone buttons
    public static final RegistryObject<Block> BLACK_STONE_BUTTON= BLOCKS.register("black_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> BLACK_STONE_BUTTON_ITEM = ITEMS.register("black_stone_button", () -> new BlockItemBase(BLACK_STONE_BUTTON.get()));
    public static final RegistryObject<Block> BLUE_STONE_BUTTON= BLOCKS.register("blue_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> BLUE_STONE_BUTTON_ITEM = ITEMS.register("blue_stone_button", () -> new BlockItemBase(BLUE_STONE_BUTTON.get()));
    public static final RegistryObject<Block> BROWN_STONE_BUTTON= BLOCKS.register("brown_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> BROWN_STONE_BUTTON_ITEM = ITEMS.register("brown_stone_button", () -> new BlockItemBase(BROWN_STONE_BUTTON.get()));
    public static final RegistryObject<Block> CYAN_STONE_BUTTON= BLOCKS.register("cyan_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> CYAN_STONE_BUTTON_ITEM = ITEMS.register("cyan_stone_button", () -> new BlockItemBase(CYAN_STONE_BUTTON.get()));
    public static final RegistryObject<Block> GRAY_STONE_BUTTON= BLOCKS.register("gray_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> GRAY_STONE_BUTTON_ITEM = ITEMS.register("gray_stone_button", () -> new BlockItemBase(GRAY_STONE_BUTTON.get()));
    public static final RegistryObject<Block> GREEN_STONE_BUTTON= BLOCKS.register("green_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> GREEN_STONE_BUTTON_ITEM = ITEMS.register("green_stone_button", () -> new BlockItemBase(GREEN_STONE_BUTTON.get()));
    public static final RegistryObject<Block> LIGHT_BLUE_STONE_BUTTON= BLOCKS.register("light_blue_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> LIGHT_BLUE_STONE_BUTTON_ITEM = ITEMS.register("light_blue_stone_button", () -> new BlockItemBase(LIGHT_BLUE_STONE_BUTTON.get()));
    public static final RegistryObject<Block> LIGHT_GRAY_STONE_BUTTON= BLOCKS.register("light_gray_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> LIGHT_GRAY_STONE_BUTTON_ITEM = ITEMS.register("light_gray_stone_button", () -> new BlockItemBase(LIGHT_GRAY_STONE_BUTTON.get()));
    public static final RegistryObject<Block> LIME_STONE_BUTTON= BLOCKS.register("lime_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> LIME_STONE_BUTTON_ITEM = ITEMS.register("lime_stone_button", () -> new BlockItemBase(LIME_STONE_BUTTON.get()));
    public static final RegistryObject<Block> MAGENTA_STONE_BUTTON= BLOCKS.register("magenta_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> MAGENTA_STONE_BUTTON_ITEM = ITEMS.register("magenta_stone_button", () -> new BlockItemBase(MAGENTA_STONE_BUTTON.get()));
    public static final RegistryObject<Block> ORANGE_STONE_BUTTON= BLOCKS.register("orange_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> ORANGE_STONE_BUTTON_ITEM = ITEMS.register("orange_stone_button", () -> new BlockItemBase(ORANGE_STONE_BUTTON.get()));
    public static final RegistryObject<Block> PINK_STONE_BUTTON= BLOCKS.register("pink_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> PINK_STONE_BUTTON_ITEM = ITEMS.register("pink_stone_button", () -> new BlockItemBase(PINK_STONE_BUTTON.get()));
    public static final RegistryObject<Block> PURPLE_STONE_BUTTON= BLOCKS.register("purple_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> PURPLE_STONE_BUTTON_ITEM = ITEMS.register("purple_stone_button", () -> new BlockItemBase(PURPLE_STONE_BUTTON.get()));
    public static final RegistryObject<Block> RED_STONE_BUTTON= BLOCKS.register("red_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> RED_STONE_BUTTON_ITEM = ITEMS.register("red_stone_button", () -> new BlockItemBase(RED_STONE_BUTTON.get()));
    public static final RegistryObject<Block> WHITE_STONE_BUTTON= BLOCKS.register("white_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> WHITE_STONE_BUTTON_ITEM = ITEMS.register("white_stone_button", () -> new BlockItemBase(WHITE_STONE_BUTTON.get()));
    public static final RegistryObject<Block> YELLOW_STONE_BUTTON= BLOCKS.register("yellow_stone_button", () -> new DyedStoneButtonBlock(Block.Properties.from(net.minecraft.block.Blocks.STONE_BUTTON)));
    public static final RegistryObject<Item> YELLOW_STONE_BUTTON_ITEM = ITEMS.register("yellow_stone_button", () -> new BlockItemBase(YELLOW_STONE_BUTTON.get()));

}
